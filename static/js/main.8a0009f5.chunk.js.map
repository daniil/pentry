{"version":3,"sources":["utils/userEncryption.js","components/Login/Login.js","components/Signup/Signup.js","pages/LoginPage/LoginPage.js","components/AddInk/AddInk.js","components/Inks/Inks.js","components/AddPen/AddPen.js","components/Pens/Pens.js","components/InkPen/InkPen.js","components/InkedPens/InkedPens.js","pages/MyPentryPage/MyPentryPage.js","App.js","serviceWorker.js","index.js"],"names":["crypto","Login","state","username","password","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","axios","get","PANTRY_API","then","res","bcrypt","compare","data","_","passwordMatch","Error","props","handleLogin","console","log","catch","err","type","placeholder","onChange","this","onClick","Component","Signup","passwordRepeat","validationMessage","createUser","hash","hashedPassword","post","inks","pens","inkedPens","initEncryption","Crypto","ENCRYPT_KEY","encryptUser","encrypt","decryptUser","decrypt","LoginPage","localStorage","setItem","JSON","stringify","token","checkUserLoggedIn","parse","getItem","history","push","handleSignup","initState","brand","inkName","colorName","size","hue","dateAcquired","AddInk","Inks","map","ink","key","id","model","finishName","nibType","nibSize","AddPen","Pens","checkPenInked","pen","inkedHistory","filter","inkedPen","penId","length","isActive","penInked","handlePenInking","handlePenCleaning","InkPen","inkChoice","handleInkChange","handleInkChoice","InkedPens","getCurrentlyInked","inactiveIds","inking","includes","renderPen","currPen","find","renderInk","inkId","currInk","currentlyInked","dateInked","MyPentryPage","userToken","inkPen","validateUser","handleLogout","refreshData","removeItem","handleInkSubmit","inkData","updateData","nanoid","dateAdded","Date","now","handlePenSubmit","penData","dateCleaned","newData","url","method","path","match","to","exact","render","routerProps","process","App","basename","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8a0009f5.chunk.js","sourcesContent":["import Crypto from 'simple-crypto-js';\nimport { ENCRYPT_KEY } from '../App';\nlet crypto;\n\nexport const initEncryption = () => {\n  if (crypto) return true;\n  crypto = new Crypto(ENCRYPT_KEY);\n  return true;\n}\n\nexport const encryptUser = username => initEncryption() && crypto.encrypt(username);\n\nexport const decryptUser = username => {\n  try {\n    return initEncryption() && crypto.decrypt(username);\n  } catch (e) {\n    return false;\n  }\n};","import React, { Component } from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport { PANTRY_API } from '../../App';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    axios\n      .get(`${PANTRY_API}/basket/${this.state.username}`)\n      .then(res => {\n        bcrypt.compare(this.state.password, res.data.password, (_, passwordMatch) => {\n          if (passwordMatch) {\n            this.props.handleLogin(res.data.username);\n          } else {\n            throw(new Error('Username and password dont match'));\n          }\n        });\n      }, () => console.log('Please signup, user cant be found'))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          onChange={this.handleInputChange}\n          value={this.state.username} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <button onClick={this.handleSubmit}>Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport { PANTRY_API } from '../../App';\n\nclass Signup extends Component {\n  state = {\n    username: '',\n    password: '',\n    passwordRepeat: '',\n    validationMessage: ''\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      validationMessage: ''\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.password !== this.state.passwordRepeat) {\n      this.setState({\n        validationMessage: 'Your passwords do not match'\n      });\n      return;\n    }\n\n    axios\n      .get(`${PANTRY_API}/basket/${this.state.username}`)\n      .then(\n        () => this.setState({\n          validationMessage: 'This username already exists, please pick another'\n        }),\n        () => this.createUser()\n      );\n  }\n\n  createUser = () => {\n    bcrypt.hash(this.state.password, 10, (_, hashedPassword) => {\n      axios\n        .post(`${PANTRY_API}/basket/${this.state.username}`, {\n          username: this.state.username,\n          password: hashedPassword,\n          inks: [],\n          pens: [],\n          inkedPens: []\n        })\n        .then(() => this.props.handleLogin(this.state.username));\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          onChange={this.handleInputChange}\n          value={this.state.username} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <input\n          type=\"password\"\n          name=\"passwordRepeat\"\n          placeholder=\"Repeat Password\"\n          onChange={this.handleInputChange}\n          value={this.state.passwordRepeat} />\n        <button onClick={this.handleSubmit}>Signup</button>\n        <p>{this.state.validationMessage}</p>\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport Login from '../../components/Login';\nimport Signup from '../../components/Signup';\nimport { encryptUser } from '../../utils/userEncryption';\n\nclass LoginPage extends Component {\n  componentDidMount() {\n    this.checkUserLoggedIn();\n  }\n\n  handleLogin = username => {\n    localStorage.setItem('pentry', JSON.stringify({\n      token: encryptUser(username)\n    }));\n    this.checkUserLoggedIn();\n  }\n\n  checkUserLoggedIn = () => {\n    const token = JSON.parse(localStorage.getItem('pentry'));\n    token && this.props.history.push('/my');\n  }\n\n  handleSignup = () => {\n    this.props.history.push('/')\n  }\n  \n  render() {\n    return (\n      <>\n        <Login handleLogin={this.handleLogin} />\n        - or -\n        <Signup handleLogin={this.handleLogin} />\n      </>\n    )\n  }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\n\nconst initState = {\n  brand: '',\n  inkName: '',\n  colorName: '',\n  type: '',\n  size: '',\n  hue: '',\n  props: '',\n  dateAcquired: ''\n};\n\nclass AddInk extends Component {\n  state = initState\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.setState(initState);\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"inkName\"\n            placeholder=\"Ink Name\"\n            onChange={this.handleInputChange}\n            value={this.state.inkName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"colorName\"\n            placeholder=\"Color Name\"\n            onChange={this.handleInputChange}\n            value={this.state.colorName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"type\"\n            placeholder=\"Type\"\n            onChange={this.handleInputChange}\n            value={this.state.type} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"size\"\n            placeholder=\"Size\"\n            onChange={this.handleInputChange}\n            value={this.state.size} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"hue\"\n            placeholder=\"Hue\"\n            onChange={this.handleInputChange}\n            value={this.state.hue} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"props\"\n            placeholder=\"Properties\"\n            onChange={this.handleInputChange}\n            value={this.state.props} />  \n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name=\"dateAcquired\"\n            placeholder=\"Date Acquired\"\n            onChange={this.handleInputChange}\n            value={this.state.dateAcquired} />  \n        </div>\n        <button onClick={this.handleSubmit}>Add</button>\n      </form>\n    )\n  }\n}\n\nexport default AddInk;","import React, { Component } from 'react';\nimport AddInk from '../AddInk';\n\nclass Inks extends Component {\n  render() {\n    return (\n      <>\n        <h2>My Inks</h2>\n        <ul>\n          <li>\n            <AddInk handleSubmit={this.props.handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Ink Name</div>\n            <div>Color Name</div>\n            <div>Type</div>\n            <div>Size</div>\n            <div>Hue</div>\n            <div>Properties</div>\n            <div>Date Acquired</div>\n          </li>\n          {this.props.inks.map(ink => {\n            return (\n              <li key={ink.id}>\n                <div>{ink.brand}</div>\n                <div>{ink.inkName}</div>\n                <div>{ink.colorName}</div>\n                <div>{ink.type}</div>\n                <div>{ink.size}</div>\n                <div>{ink.hue}</div>\n                <div>{ink.props}</div>\n                <div>{ink.dateAcquired}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default Inks;","import React, { Component } from 'react';\n\nconst initState = {\n  brand: '',\n  model: '',\n  finishName: '',\n  nibType: '',\n  nibSize: '',\n  dateAcquired: ''\n};\n\nclass AddPen extends Component {\n  state = initState\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.setState(initState);\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"model\"\n            placeholder=\"Model Name\"\n            onChange={this.handleInputChange}\n            value={this.state.model} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"finishName\"\n            placeholder=\"Finish Name\"\n            onChange={this.handleInputChange}\n            value={this.state.finishName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibType\"\n            placeholder=\"Nib Type\"\n            onChange={this.handleInputChange}\n            value={this.state.nibType} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibSize\"\n            placeholder=\"Nib Size\"\n            onChange={this.handleInputChange}\n            value={this.state.nibSize} />\n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name=\"dateAcquired\"\n            placeholder=\"Date Acquired\"\n            onChange={this.handleInputChange}\n            value={this.state.dateAcquired} />\n        </div>\n        <button onClick={this.handleSubmit}>Add</button>\n      </form>\n    )\n  }\n}\n\nexport default AddPen;","import React, { Component } from 'react';\nimport AddPen from '../AddPen';\n\nclass Pens extends Component {\n  checkPenInked = pen => {\n    const inkedHistory = this.props.inkedPens.filter(inkedPen => {\n      return inkedPen.penId === pen.id;\n    });\n\n    if (!inkedHistory.length) return false;\n    \n    if (inkedHistory.length && !inkedHistory[inkedHistory.length - 1].isActive)\n      return false;\n    \n    return inkedHistory[inkedHistory.length - 1];\n  }\n\n  render() {\n    return (\n      <>\n        <h2>My Pens</h2>\n        <ul>\n          <li>\n            <AddPen handleSubmit={this.props.handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Model</div>\n            <div>Finish Name</div>\n            <div>Nib Type</div>\n            <div>Nib Size</div>\n            <div>Date Acquired</div>\n          </li>\n          {this.props.pens.map(pen => {\n            const penInked = this.checkPenInked(pen);\n\n            return (\n              <li key={pen.id}>\n                <div>{pen.brand}</div>\n                <div>{pen.model}</div>\n                <div>{pen.finishName}</div>\n                <div>{pen.nibType}</div>\n                <div>{pen.nibSize}</div>\n                <div>{pen.dateAcquired}</div>\n                {!penInked &&\n                  <button onClick={() => this.props.handlePenInking(pen)}>\n                    Ink This Pen\n                  </button>}\n                {penInked &&\n                  <button onClick={() => this.props.handlePenCleaning(penInked)}>\n                    Clean This Pen\n                  </button>}\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Pens;","import React, { Component } from 'react';\n\nclass InkPen extends Component {\n  state = {\n    inkChoice: ''\n  }\n\n  handleInkChange = e => {\n    this.setState({\n      inkChoice: e.target.value\n    });\n  }\n\n  render() {\n    const { brand, model } = this.props.pen;\n\n    return (\n      <>\n        <p>{brand} {model}</p>\n        <select onChange={this.handleInkChange} value={this.state.inkChoice}>\n          <option value=\"\"></option>\n          {this.props.inks.map(ink => {\n            return (\n              <option key={ink.id} value={ink.id}>\n                {ink.brand} {ink.inkName} {ink.colorName}\n              </option>\n            );\n          })}\n        </select>\n        <button\n          onClick={() => this.props.handleInkChoice(this.props.pen.id, this.state.inkChoice)}>\n          Use This Ink\n        </button>\n      </>\n    );\n  }\n}\n\nexport default InkPen;","import React, { Component } from 'react';\n\nclass InkedPens extends Component {\n  getCurrentlyInked = () => {\n    const { inkedPens } = this.props;\n    \n    const inactiveIds = inkedPens\n      .filter(inking => !inking.isActive)\n      .map(inking => inking.id);\n\n    const activeInked = inkedPens\n      .filter(inking => !inactiveIds.includes(inking.id));\n\n    return activeInked;\n  }\n\n  renderPen = penId => {\n    const { pens } = this.props;\n    const currPen = pens.find(pen => pen.id === penId);\n\n    return (\n      <>{currPen.brand} {currPen.model} {currPen.finishName}</>\n    )\n  }\n\n  renderInk = inkId => {\n    const { inks } = this.props;\n    const currInk = inks.find(ink => ink.id === inkId);\n\n    return (\n      <>{currInk.brand} {currInk.inkName} {currInk.colorName}</>\n    )\n  }\n\n  render() {\n    const currentlyInked = this.getCurrentlyInked();\n\n    return (\n      <>\n        <h2>Inked Pens</h2>\n        <ul>\n          <li>\n            <div>Pen</div>\n            <div>Ink</div>\n            <div>Inked Since</div>\n          </li>\n          {currentlyInked.map(inking => {\n            return <li key={inking.id}>\n              <div>{this.renderPen(inking.penId)}</div>\n              <div>{this.renderInk(inking.inkId)}</div>\n              <div>{inking.dateInked}</div>\n            </li>;\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default InkedPens;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { decryptUser } from '../../utils/userEncryption';\nimport Inks from '../../components/Inks';\nimport Pens from '../../components/Pens';\nimport InkPen from '../../components/InkPen';\nimport InkedPens from '../../components/InkedPens';\nimport { PANTRY_API } from '../../App';\n\nclass MyPentryPage extends Component {\n  state = {\n    userToken: JSON.parse(localStorage.getItem('pentry')),\n    username: '',\n    inks: [],\n    pens: [],\n    inkedPens: [],\n    inkPen: null\n  }\n\n  componentDidMount() {\n    this.state.userToken\n      ? this.validateUser()\n      : this.props.history.push('/');\n  }\n\n  validateUser = () => {\n    const username = decryptUser(this.state.userToken.token);\n    if (!username) return this.handleLogout();\n    this.setState({ username }, this.refreshData);\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('pentry');\n    this.props.history.push('/');\n  }\n\n  handleInkSubmit = inkData => {\n    this.updateData({\n      inks: [\n        {\n          id: nanoid(),\n          dateAdded: Date.now(),\n          ...inkData\n        }\n      ]\n    });\n  }\n\n  handlePenSubmit = penData => {\n    this.updateData({\n      pens: [\n        {\n          id: nanoid(),\n          dateAdded: Date.now(),\n          ...penData\n        }\n      ]\n    })\n  }\n\n  handlePenInking = pen => {\n    this.setState({\n      inkPen: pen\n    });\n  }\n\n  handleInkChoice = (penId, inkId) => {\n    this.updateData({\n      inkedPens: [\n        {\n          id: nanoid(),\n          dateInked: Date.now(),\n          penId,\n          inkId,\n          isActive: true\n        }\n      ]\n    });\n    this.setState({\n      inkPen: null\n    });\n  }\n\n  handlePenCleaning = pen => {\n    this.updateData({\n      inkedPens: [\n        {\n          ...pen,\n          isActive: false,\n          dateCleaned: Date.now()\n        }\n      ]\n    });\n  }\n\n  updateData = newData => {\n    axios({\n      url: `${PANTRY_API}/basket/${this.state.username}`,\n      method: 'PUT',\n      data: newData\n    }).then(() => this.refreshData());\n  }\n\n  refreshData = () => {\n    axios\n      .get(`${PANTRY_API}/basket/${this.state.username}`)\n      .then(res => this.setState({\n        inks: res.data.inks,\n        pens: res.data.pens,\n        inkedPens: res.data.inkedPens\n      }));\n  }\n\n  render() {\n    const { path } = this.props.match;\n\n    if (!this.state.userToken) return null;\n\n    return (\n      <>\n        <p>\n          Welcome,&nbsp;\n          <strong>{this.state.username}</strong>&nbsp;\n          (<Link to=\"/\" onClick={this.handleLogout}>logout</Link>)\n        </p>\n        <Link to={`${path}`}>\n          <h1>Pentry</h1>\n        </Link>\n        <ul>\n          <li>\n            <Link to={`${path}/inks`}>Inks</Link>\n          </li>\n          <li>\n            <Link to={`${path}/pens`}>Pens</Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route path={`${path}`} exact render={routerProps => {\n            return (\n              <InkedPens\n                inks={this.state.inks}\n                pens={this.state.pens}\n                inkedPens={this.state.inkedPens}\n                {...routerProps} />\n            )\n          }} />\n          <Route path={`${path}/inks`} render={routerProps => {\n            return (\n              <Inks\n                inks={this.state.inks}\n                handleSubmit={this.handleInkSubmit}\n                {...routerProps} />\n            )\n          }} />\n          <Route path={`${path}/pens`} render={routerProps => {\n            return (\n              <Pens\n                pens={this.state.pens}\n                inkedPens={this.state.inkedPens}\n                handleSubmit={this.handlePenSubmit}\n                handlePenInking={this.handlePenInking}\n                handlePenCleaning={this.handlePenCleaning}\n                {...routerProps} />\n            )\n          }} />\n        </Switch>\n        {this.state.inkPen &&\n          <InkPen\n            pen={this.state.inkPen}\n            inks={this.state.inks}\n            handleInkChoice={this.handleInkChoice} />}\n      </>\n    )\n  }\n}\n\nexport default MyPentryPage;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport MyPentryPage from './pages/MyPentryPage';\n\nexport const PANTRY_API = process.env.REACT_APP_PANTRY_API;\nexport const ENCRYPT_KEY = process.env.REACT_APP_ENCRYPT_KEY;\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route path=\"/\" exact component={LoginPage} />\n          <Route path=\"/my\" component={MyPentryPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}