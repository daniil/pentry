{"version":3,"sources":["utils/firebaseStore.js","components/Login/Login.js","components/Signup/Signup.js","pages/LoginPage/LoginPage.js","utils/formatDate.js","components/AddInk/AddInk.js","components/Inks/Inks.js","components/AddPen/AddPen.js","components/Pens/Pens.js","components/InkPen/InkPen.js","components/InkedPens/InkedPens.js","firebaseConfig.js","pages/MyPentryPage/MyPentryPage.js","App.js","index.js"],"names":["db","firebaseListener","snapshotListeners","Login","state","email","password","validationMessage","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","firebase","auth","setPersistence","Auth","Persistence","LOCAL","then","signInWithEmailAndPassword","catch","err","message","type","placeholder","onChange","this","onClick","Component","Signup","passwordRepeat","firestore","createUserWithEmailAndPassword","res","collection","doc","user","uid","set","LoginPage","onAuthStateChanged","props","history","push","formatDay","dateInMs","format","Date","firebaseFromDate","date","Timestamp","fromDate","firebaseTimestamp","FieldValue","serverTimestamp","initState","id","brand","inkName","colorName","size","hue","dateAcquired","AddInk","cleanSubmitData","selectedInk","newInkDataPassed","prevProps","seconds","Inks","handleInkSelect","ink","inkData","isUpdate","inks","handleRemove","activeInks","filter","isActive","map","key","model","finishName","nibType","nibSize","AddPen","selectedPen","newPenDataPassed","Pens","handlePenSelect","pen","penData","checkPenInked","inkedPens","find","inkedPen","penId","displayInk","penInked","currInk","inkId","pens","handleInking","handleCleaning","activePens","InkPen","inkChoice","handleInkChange","inkUseCount","length","handleInkChoice","useCount","InkedPens","getCurrentlyInked","inking","renderPen","currPen","renderInk","currentlyInked","dateInked","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","inksCollection","userId","pensCollection","inkedPensCollection","apps","initializeApp","Promise","resolve","reject","cb","stateKey","onSnapshot","snapshot","snapshotArr","forEach","data","listener","add","addedTimestamp","update","updatedTimestamp","removedTimestamp","inkPenId","dateCleaned","signOut","MyPentryPage","inkPen","initUserPentry","firebaseStore","handleLogout","handleInkSubmit","handleInkRemove","handlePenSubmit","handlePenRemove","handlePenInking","handlePenCleaning","path","match","to","exact","render","routerProps","App","basename","process","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6536e17c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport firebaseConfig from '../firebaseConfig';\nimport { firebaseFromDate, firebaseTimestamp } from './formatDate';\n\nlet db;\nlet firebaseListener;\nlet snapshotListeners;\n\nconst init = () => {\n  !firebase.apps.length && firebase.initializeApp(firebaseConfig);\n  db = firebase.firestore();\n}\n\nconst addAuthListener = () => {\n  return new Promise((resolve, reject) => {\n    firebaseListener = firebase.auth().onAuthStateChanged(user => {\n      user ? resolve(user) : reject();\n    });\n  });\n}\n\nconst removeAuthListener = () => {\n  firebaseListener && firebaseListener();\n  firebaseListener = null;\n}\n\nconst addSnapshotListeners = (userId, cb) => {\n  snapshotListeners = ['inks', 'pens', 'inkedPens']\n    .map(stateKey => {\n      return db\n        .collection('users')\n        .doc(userId)\n        .collection(stateKey)\n        .onSnapshot(snapshot => {\n          const snapshotArr = [];\n          snapshot.forEach(doc => snapshotArr.push({\n            id: doc.id,\n            ...doc.data()\n          }));\n          cb({ [stateKey]: snapshotArr });\n        });\n    });\n}\n\nconst removeSnapshotListeners = () => {\n  snapshotListeners && snapshotListeners.map(listener => listener());\n  snapshotListeners = null;\n}\n\nconst inksCollection = userId => {\n  return db.collection('users').doc(userId).collection('inks');\n}\n\nconst addInk = (userId, inkData) => {\n  inksCollection(userId)\n    .add({\n      ...inkData,\n      dateAcquired: firebaseFromDate(inkData.dateAcquired),\n      addedTimestamp: firebaseTimestamp(),\n      isActive: true\n    });\n}\n\nconst updateInk = (userId, inkData) => {\n  inksCollection(userId)\n    .doc(inkData.id)\n    .update({\n      ...inkData,\n      dateAcquired: firebaseFromDate(inkData.dateAcquired),\n      updatedTimestamp: firebaseTimestamp()\n    });\n}\n\nconst removeInk = (userId, inkId) => {\n  inksCollection(userId)\n    .doc(inkId)\n    .update({\n      isActive: false,\n      removedTimestamp: firebaseTimestamp()\n    });\n}\n\nconst pensCollection = userId => {\n  return db.collection('users').doc(userId).collection('pens');\n}\n\nconst addPen = (userId, penData) => {\n  pensCollection(userId)\n    .add({\n    ...penData,\n    dateAcquired: firebaseFromDate(penData.dateAcquired),\n    addedTimestamp: firebaseTimestamp(),\n    isActive: true\n  });\n}\n\nconst updatePen = (userId, penData) => {\n  pensCollection(userId)\n    .doc(penData.id)\n    .update({\n      ...penData,\n      dateAcquired: firebaseFromDate(penData.dateAcquired),\n      updatedTimestamp: firebaseTimestamp()\n    });\n}\n\nconst removePen = (userId, penId) => {\n  pensCollection(userId)\n    .doc(penId)\n    .update({\n      isActive: false,\n      removedTimestamp: firebaseTimestamp()\n    });\n}\n\nconst inkedPensCollection = userId => {\n  return db.collection('users').doc(userId).collection('inkedPens');\n}\n\nconst inkPen = (userId, penId, inkId) => {\n  return new Promise(resolve => {\n    inkedPensCollection(userId)\n      .add({\n        penId,\n        inkId,\n        dateInked: firebaseTimestamp(),\n        isActive: true \n      });\n      resolve();\n  });\n}\n\nconst cleanPen = (userId, inkPenId) => {\n  inkedPensCollection(userId)\n    .doc(inkPenId)\n    .update({\n      isActive: false,\n      dateCleaned: firebaseTimestamp()\n    });\n}\n\nconst logout = () => {\n  firebase.auth().signOut();\n}\n\nexport default {\n  init,\n  addAuthListener,\n  removeAuthListener,\n  addSnapshotListeners,\n  removeSnapshotListeners,\n  addInk,\n  updateInk,\n  removeInk,\n  addPen,\n  updatePen,\n  removePen,\n  inkPen,\n  cleanPen,\n  logout\n}","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\n\nclass Login extends Component {\n  state = {\n    email: '',\n    password: '',\n    validationMessage: ''\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n      .then(() => {\n        firebase\n          .auth()\n          .signInWithEmailAndPassword(this.state.email, this.state.password)\n          .catch(err => this.setState({\n            validationMessage: err.message\n          }));\n      });\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={this.handleInputChange}\n          value={this.state.email} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <button onClick={this.handleSubmit}>Login</button>\n        <p>{this.state.validationMessage}</p>\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport firebase from 'firebase';\n\nclass Signup extends Component {\n  state = {\n    email: '',\n    password: '',\n    passwordRepeat: '',\n    validationMessage: ''\n  }\n\n  db = firebase.firestore()\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n      validationMessage: ''\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.password !== this.state.passwordRepeat) {\n      this.setState({\n        validationMessage: 'Your passwords do not match'\n      });\n      return;\n    }\n\n    firebase\n      .auth()\n      .setPersistence(firebase.auth.Auth.Persistence.LOCAL)\n      .then(() => {\n        firebase\n          .auth()\n          .createUserWithEmailAndPassword(this.state.email, this.state.password)\n          .then(res => {\n            this\n              .db\n              .collection('users')\n              .doc(res.user.uid)\n              .set({ email: res.user.email });\n          })\n          .catch(err => {\n            this.setState({\n              validationMessage: err.message\n            });\n          });\n      })\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Email\"\n          onChange={this.handleInputChange}\n          value={this.state.email} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <input\n          type=\"password\"\n          name=\"passwordRepeat\"\n          placeholder=\"Repeat Password\"\n          onChange={this.handleInputChange}\n          value={this.state.passwordRepeat} />\n        <button onClick={this.handleSubmit}>Signup</button>\n        <p>{this.state.validationMessage}</p>\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport Login from '../../components/Login';\nimport Signup from '../../components/Signup';\n\nclass LoginPage extends Component {\n  componentDidMount() {\n    this.firebaseListener = firebase.auth().onAuthStateChanged(user => {\n      user\n        ? this.props.history.push('/my')\n        : this.props.history.push('/');\n    });\n  }\n\n  componentWillUnmount() {\n    this.firebaseListener && this.firebaseListener();\n    this.firebaseListener = null;\n  }\n\n  render() {\n    return (\n      <>\n        <Login />\n        - or -\n        <Signup />\n      </>\n    )\n  }\n}\n\nexport default LoginPage;","import { format } from 'date-fns';\nimport firebase from 'firebase/app';\n\nexport const formatDay = dateInMs => format(new Date(dateInMs * 1000), 'yyyy-MM-dd');\n\nexport const firebaseFromDate = date => {\n  return firebase.firestore.Timestamp.fromDate(new Date(date));\n}\n\nexport const firebaseTimestamp = () => {\n  return firebase.firestore.FieldValue.serverTimestamp();\n}","import React, { Component } from 'react';\nimport { formatDay } from '../../utils/formatDate';\n\nconst initState = {\n  id: null,\n  brand: '',\n  inkName: '',\n  colorName: '',\n  type: '',\n  size: '',\n  hue: '',\n  props: '',\n  dateAcquired: ''\n};\n\nclass AddInk extends Component {\n  state = initState\n\n  componentDidUpdate(prevProps) {\n    if (this.newInkDataPassed(prevProps)) {\n      const { selectedInk: {\n        id, brand, inkName, colorName, type, size, hue, props, dateAcquired\n      } } = this.props;\n\n      this.setState({\n        id, brand, inkName, colorName, type, size, hue, props,\n        dateAcquired: formatDay(dateAcquired.seconds)\n      });\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.cleanSubmitData(), !!this.props.selectedInk);\n    this.setState(initState);\n  }\n\n  newInkDataPassed = prevProps => {\n    return this.props.selectedInk &&\n      (!prevProps.selectedInk ||\n      prevProps.selectedInk.id !== this.props.selectedInk.id);\n  }\n\n  cleanSubmitData = () => {\n    if (this.state.id) return this.state;\n    const { id, ...cleanState } = this.state;\n    return cleanState;\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"inkName\"\n            placeholder=\"Ink Name\"\n            onChange={this.handleInputChange}\n            value={this.state.inkName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"colorName\"\n            placeholder=\"Color Name\"\n            onChange={this.handleInputChange}\n            value={this.state.colorName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"type\"\n            placeholder=\"Type\"\n            onChange={this.handleInputChange}\n            value={this.state.type} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"size\"\n            placeholder=\"Size\"\n            onChange={this.handleInputChange}\n            value={this.state.size} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"hue\"\n            placeholder=\"Hue\"\n            onChange={this.handleInputChange}\n            value={this.state.hue} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"props\"\n            placeholder=\"Properties\"\n            onChange={this.handleInputChange}\n            value={this.state.props} />  \n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name=\"dateAcquired\"\n            placeholder=\"Date Acquired\"\n            onChange={this.handleInputChange}\n            value={this.state.dateAcquired} />  \n        </div>\n        <button onClick={this.handleSubmit}>\n          {this.props.selectedInk ? 'Update' : 'Add'}\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default AddInk;","import React, { Component } from 'react';\nimport AddInk from '../AddInk';\nimport { formatDay } from '../../utils/formatDate';\n\nclass Inks extends Component {\n  state = {\n    selectedInk: null\n  }\n\n  handleInkSelect = ink => {\n    this.setState({ selectedInk: ink });\n  }\n\n  handleSubmit = (inkData, isUpdate) => {\n    if (isUpdate) this.setState({ selectedInk: null });\n    this.props.handleSubmit(inkData, isUpdate);\n  }\n\n  render() {\n    const { inks, handleRemove } =  this.props;\n    const activeInks = inks.filter(ink => ink.isActive);\n\n    return (\n      <>\n        <h2>My Inks</h2>\n        <ul>\n          <li>\n            <AddInk\n              selectedInk={this.state.selectedInk}\n              handleSubmit={this.handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Ink Name</div>\n            <div>Color Name</div>\n            <div>Type</div>\n            <div>Size</div>\n            <div>Hue</div>\n            <div>Properties</div>\n            <div>Date Acquired</div>\n          </li>\n          {\n          activeInks.map(ink => {\n            return (\n              <li key={ink.id}>\n                <div>{ink.brand}</div>\n                <div>{ink.inkName}</div>\n                <div>{ink.colorName}</div>\n                <div>{ink.type}</div>\n                <div>{ink.size}</div>\n                <div>{ink.hue}</div>\n                <div>{ink.props}</div>\n                <div>{formatDay(ink.dateAcquired.seconds)}</div>\n                <button onClick={() => this.handleInkSelect(ink)}>Edit</button>\n                <button onClick={() => handleRemove(ink.id)}>Remove</button>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default Inks;","import React, { Component } from 'react';\nimport { formatDay } from '../../utils/formatDate';\n\nconst initState = {\n  id: null,\n  brand: '',\n  model: '',\n  finishName: '',\n  nibType: '',\n  nibSize: '',\n  dateAcquired: ''\n};\n\nclass AddPen extends Component {\n  state = initState\n\n  componentDidUpdate(prevProps) {\n    if (this.newPenDataPassed(prevProps)) {\n      const { selectedPen: {\n        id, brand, model, finishName, nibType, nibSize, dateAcquired\n      } } = this.props;\n\n      this.setState({\n        id, brand, model, finishName, nibType, nibSize,\n        dateAcquired: formatDay(dateAcquired.seconds)\n      });\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.cleanSubmitData(), !!this.props.selectedPen);\n    this.setState(initState);\n  }\n\n  newPenDataPassed = prevProps => {\n    return this.props.selectedPen &&\n      (!prevProps.selectedPen ||\n      prevProps.selectedPen.id !== this.props.selectedPen.id);\n  }\n\n  cleanSubmitData = () => {\n    if (this.state.id) return this.state;\n    const { id, ...cleanState } = this.state;\n    return cleanState;\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"model\"\n            placeholder=\"Model Name\"\n            onChange={this.handleInputChange}\n            value={this.state.model} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"finishName\"\n            placeholder=\"Finish Name\"\n            onChange={this.handleInputChange}\n            value={this.state.finishName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibType\"\n            placeholder=\"Nib Type\"\n            onChange={this.handleInputChange}\n            value={this.state.nibType} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibSize\"\n            placeholder=\"Nib Size\"\n            onChange={this.handleInputChange}\n            value={this.state.nibSize} />\n        </div>\n        <div>\n          <input\n            type=\"date\"\n            name=\"dateAcquired\"\n            placeholder=\"Date Acquired\"\n            onChange={this.handleInputChange}\n            value={this.state.dateAcquired} />\n        </div>\n        <button onClick={this.handleSubmit}>\n          {this.props.selectedPen ? 'Update' : 'Add'}\n        </button>\n      </form>\n    )\n  }\n}\n\nexport default AddPen;","import React, { Component } from 'react';\nimport AddPen from '../AddPen';\nimport { formatDay } from '../../utils/formatDate';\n\nclass Pens extends Component {\n  state = {\n    selectedPen: null\n  }\n\n  handlePenSelect = pen => {\n    this.setState({ selectedPen: pen });\n  }\n\n  handleSubmit = (penData, isUpdate) => {\n    if (isUpdate) this.setState({ selectedPen: null });\n    this.props.handleSubmit(penData, isUpdate);\n  }\n\n  checkPenInked = pen => {\n    return this.props.inkedPens.find(inkedPen => {\n      return inkedPen.penId === pen.id && inkedPen.isActive;\n    });\n  }\n\n  displayInk = penInked => {\n    const currInk = this.props.inks.find(ink => ink.id === penInked.inkId);\n    return `${currInk.brand} ${currInk.inkName} ${currInk.colorName} ${!currInk.isActive && '(retired)'}`;\n  }\n\n  render() {\n    const {\n      pens,\n      handleSubmit,\n      handleRemove,\n      handleInking,\n      handleCleaning\n    } = this.props;\n    const activePens = pens.filter(pen => pen.isActive);\n\n    return (\n      <>\n        <h2>My Pens</h2>\n        <ul>\n          <li>\n            <AddPen \n              selectedPen={this.state.selectedPen}\n              handleSubmit={handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Model</div>\n            <div>Finish Name</div>\n            <div>Nib Type</div>\n            <div>Nib Size</div>\n            <div>Date Acquired</div>\n            <div>Inked With</div>\n          </li>\n          {activePens.map(pen => {\n            const penInked = this.checkPenInked(pen);\n\n            return (\n              <li key={pen.id}>\n                <div>{pen.brand}</div>\n                <div>{pen.model}</div>\n                <div>{pen.finishName}</div>\n                <div>{pen.nibType}</div>\n                <div>{pen.nibSize}</div>\n                <div>{formatDay(pen.dateAcquired.seconds)}</div>\n                <button onClick={() => this.handlePenSelect(pen)}>Edit</button>\n                <button onClick={() => handleRemove(pen.id)}>Remove</button>\n                {!penInked &&\n                  <button onClick={() => handleInking(pen)}>\n                    Ink This Pen\n                  </button>}\n                {penInked &&\n                  <>\n                    <div>{this.displayInk(penInked)}</div>\n                    <button onClick={() => handleCleaning(penInked)}>\n                      Clean This Pen\n                    </button>\n                  </>}\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Pens;","import React, { Component } from 'react';\n\nclass InkPen extends Component {\n  state = {\n    inkChoice: ''\n  }\n\n  handleInkChange = e => {\n    this.setState({\n      inkChoice: e.target.value\n    });\n  }\n\n  inkUseCount = ink => {\n    const { inkedPens } = this.props;\n    return inkedPens.filter(inkedPen => {\n      return inkedPen.isActive && inkedPen.inkId === ink.id;\n    }).length;\n  }\n\n  render() {\n    const { pen: { brand, model }, inks, handleInkChoice } = this.props;\n\n    return (\n      <>\n        <p>{brand} {model}</p>\n        <select onChange={this.handleInkChange} value={this.state.inkChoice}>\n          <option value=\"\"></option>\n          {inks.map(ink => {\n            const useCount = this.inkUseCount(ink);\n            return (\n              <option key={ink.id} value={ink.id}>\n                {ink.brand} {ink.inkName} {ink.colorName}\n                {!!useCount && `(${useCount})`}\n              </option>\n            );\n          })}\n        </select>\n        <button\n          onClick={() => handleInkChoice(this.props.pen.id, this.state.inkChoice)}>\n          Use This Ink\n        </button>\n      </>\n    );\n  }\n}\n\nexport default InkPen;","import React, { Component } from 'react';\nimport { formatDay } from '../../utils/formatDate';\n\nclass InkedPens extends Component {\n  getCurrentlyInked = () => {\n    const { inkedPens } = this.props;\n    return inkedPens.filter(inking => inking.isActive);\n  }\n\n  renderPen = penId => {\n    const { pens } = this.props;\n    const currPen = pens.find(pen => pen.id === penId);\n\n    return (\n      <>{currPen.brand} {currPen.model} {currPen.finishName}</>\n    );\n  }\n\n  renderInk = inkId => {\n    const { inks } = this.props;\n    const currInk = inks.find(ink => ink.id === inkId);\n\n    return (\n      <>{currInk.brand} {currInk.inkName} {currInk.colorName}</>\n    );\n  }\n\n  render() {\n    const currentlyInked = this.getCurrentlyInked();\n\n    return (\n      <>\n        <h2>Inked Pens</h2>\n        <ul>\n          <li>\n            <div>Pen</div>\n            <div>Ink</div>\n            <div>Inked Since</div>\n          </li>\n          {currentlyInked.map(inking => {\n            return <li key={inking.id}>\n              <div>{this.renderPen(inking.penId)}</div>\n              <div>{this.renderInk(inking.inkId)}</div>\n              <div>{formatDay(inking.dateInked.seconds)}</div>\n            </li>;\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default InkedPens;","const firebaseConfig = {\n  apiKey: \"AIzaSyA2jhn64ILvx4B9zL3ZNRLV9gh4I8Xeo24\",\n  authDomain: \"pentry-3732e.firebaseapp.com\",\n  databaseURL: \"https://pentry-3732e.firebaseio.com\",\n  projectId: \"pentry-3732e\",\n  storageBucket: \"pentry-3732e.appspot.com\",\n  messagingSenderId: \"988072030575\",\n  appId: \"1:988072030575:web:5b3bc8a425a47f0a33789a\",\n  measurementId: \"G-6MKHZT1XNJ\"\n};\n\nexport default firebaseConfig;","import React, { Component } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport Inks from '../../components/Inks';\nimport Pens from '../../components/Pens';\nimport InkPen from '../../components/InkPen';\nimport InkedPens from '../../components/InkedPens';\nimport firebaseStore from '../../utils/firebaseStore';\n\nclass MyPentryPage extends Component {\n  state = {\n    user: null,\n    inks: [],\n    pens: [],\n    inkedPens: [],\n    inkPen: null\n  }\n\n  componentDidMount() {\n    firebaseStore.addAuthListener().then(\n      this.initUserPentry,\n      () => this.props.history.push('/')\n    );\n  }\n\n  componentWillUnmount() {\n    firebaseStore.removeAuthListener();\n    firebaseStore.removeSnapshotListeners();\n  }\n\n  userId = () => this.state.user.uid\n\n  initUserPentry = user => {\n    this.setState(\n      { user },\n      () => firebaseStore.addSnapshotListeners(\n        this.userId(),\n        data => this.setState(data)\n      )\n    );\n  }\n\n  handleLogout = () => {\n    firebaseStore.logout();\n  }\n\n  handleInkSubmit = (inkData, isUpdate) => {\n    isUpdate\n      ? firebaseStore.updateInk(this.userId(), inkData)\n      : firebaseStore.addInk(this.userId(), inkData);\n  }\n\n  handleInkRemove = inkId => {\n    firebaseStore.removeInk(this.userId(), inkId);\n  }\n\n  handlePenSubmit = (penData, isUpdate) => {\n    isUpdate\n      ? firebaseStore.updatePen(this.userId(), penData)\n      : firebaseStore.addPen(this.userId(), penData);\n  }\n\n  handlePenRemove = penId => {\n    firebaseStore.removePen(this.userId(), penId);\n  }\n\n  handlePenInking = pen => {\n    this.setState({ inkPen: pen });\n  }\n\n  handleInkChoice = (penId, inkId) => {\n    firebaseStore\n      .inkPen(this.userId(), penId, inkId)\n      .then(() => this.setState({ inkPen: null }));\n  }\n\n  handlePenCleaning = inkPen => {\n    firebaseStore\n      .cleanPen(this.userId(), inkPen.id);\n  }\n\n  render() {\n    const { path } = this.props.match;\n\n    if (!this.state.user) return null;\n\n    return (\n      <>\n        <p>\n          Welcome,&nbsp;\n          <strong>{this.state.user.email}</strong>&nbsp;\n          (<Link to=\"/\" onClick={this.handleLogout}>logout</Link>)\n        </p>\n        <Link to={`${path}`}>\n          <h1>Pentry</h1>\n        </Link>\n        <ul>\n          <li>\n            <Link to={`${path}/inks`}>Inks</Link>\n          </li>\n          <li>\n            <Link to={`${path}/pens`}>Pens</Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route path={`${path}`} exact render={routerProps => {\n            return (\n              <InkedPens\n                inks={this.state.inks}\n                pens={this.state.pens}\n                inkedPens={this.state.inkedPens}\n                {...routerProps} />\n            )\n          }} />\n          <Route path={`${path}/inks`} render={routerProps => {\n            return (\n              <Inks\n                inks={this.state.inks}\n                handleSubmit={this.handleInkSubmit}\n                handleRemove={this.handleInkRemove}\n                {...routerProps} />\n            )\n          }} />\n          <Route path={`${path}/pens`} render={routerProps => {\n            return (\n              <Pens\n                pens={this.state.pens}\n                inks={this.state.inks}\n                inkedPens={this.state.inkedPens}\n                handleSubmit={this.handlePenSubmit}\n                handleRemove={this.handlePenRemove}\n                handleInking={this.handlePenInking}\n                handleCleaning={this.handlePenCleaning}\n                {...routerProps} />\n            )\n          }} />\n        </Switch>\n        {this.state.inkPen &&\n          <InkPen\n            pen={this.state.inkPen}\n            inks={this.state.inks}\n            inkedPens={this.state.inkedPens}\n            handleInkChoice={this.handleInkChoice} />}\n      </>\n    )\n  }\n}\n\nexport default MyPentryPage;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport MyPentryPage from './pages/MyPentryPage';\nimport firebaseStore from './utils/firebaseStore';\n\nclass App extends Component {\n  constructor() {\n    super();\n    firebaseStore.init();\n  }\n\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL + '/'}>\n        <Switch>\n          <Route path=\"/\" exact component={LoginPage} />\n          <Route path=\"/my\" component={MyPentryPage} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}