{"version":3,"sources":["components/Login/Login.js","components/Signup/Signup.js","pages/LoginPage/LoginPage.js","components/AddInk/AddInk.js","components/Inks/Inks.js","components/AddPen/AddPen.js","components/Pens/Pens.js","components/InkPen/InkPen.js","pages/MyPentryPage/MyPentryPage.js","App.js","serviceWorker.js","index.js"],"names":["Login","state","username","password","handleInputChange","e","setState","target","name","value","handleSubmit","preventDefault","axios","get","PANTRY_API","then","res","bcrypt","compare","data","_","passwordMatch","Error","props","handleLogin","console","log","catch","err","type","placeholder","onChange","this","onClick","Component","Signup","passwordRepeat","hash","hashedPassword","post","inks","pens","inkedPens","LoginPage","localStorage","setItem","JSON","stringify","checkUserLoggedIn","parse","getItem","history","push","handleSignup","initState","brand","inkName","colorName","size","hue","AddInk","Inks","map","ink","key","id","model","finishName","nibType","nibSize","AddPen","Pens","checkPenInked","pen","inkedHistory","filter","inkedPen","penId","length","isActive","penInked","handlePenInking","handlePenCleaning","InkPen","inkChoice","handleInkChange","handleInkChoice","MyPentryPage","user","inkPen","handleLogout","removeItem","handleInkSubmit","inkData","updateData","nanoid","dateAdded","Date","now","handlePenSubmit","penData","inkId","dateInked","dateCleaned","newData","url","method","refreshData","path","match","to","render","routerProps","process","App","exact","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.08bbb0a2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport { PANTRY_API } from '../../App';\n\nclass Login extends Component {\n  state = {\n    username: '',\n    password: ''\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    axios\n      .get(`${PANTRY_API}/basket/${this.state.username}`)\n      .then(res => {\n        bcrypt.compare(this.state.password, res.data.password, (_, passwordMatch) => {\n          if (passwordMatch) {\n            this.props.handleLogin(res.data.username);\n          } else {\n            throw(new Error('Username and password dont match'));\n          }\n        });\n      }, () => console.log('Please signup, user cant be found'))\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          onChange={this.handleInputChange}\n          value={this.state.username} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <button onClick={this.handleSubmit}>Login</button>\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport bcrypt from 'bcryptjs';\nimport axios from 'axios';\nimport { PANTRY_API } from '../../App';\n\nclass Signup extends Component {\n  state = {\n    username: '',\n    password: '',\n    passwordRepeat: ''\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (this.state.password !== this.state.passwordRepeat) {\n      console.log('Enter same password');\n      return;\n    }\n\n    bcrypt.hash(this.state.password, 10, (_, hashedPassword) => {\n      axios\n        .post(`${PANTRY_API}/basket/${this.state.username}`, {\n          username: this.state.username,\n          password: hashedPassword,\n          inks: [],\n          pens: [],\n          inkedPens: []\n        })\n        .then(() => this.props.handleLogin(this.state.username));\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"Username\"\n          onChange={this.handleInputChange}\n          value={this.state.username} />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleInputChange}\n          value={this.state.password} />\n        <input\n          type=\"password\"\n          name=\"passwordRepeat\"\n          placeholder=\"Repeat Password\"\n          onChange={this.handleInputChange}\n          value={this.state.passwordRepeat} />\n        <button onClick={this.handleSubmit}>Signup</button>\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport Login from '../../components/Login';\nimport Signup from '../../components/Signup';\n\nclass LoginPage extends Component {\n  componentDidMount() {\n    this.checkUserLoggedIn();\n  }\n\n  handleLogin = username => {\n    localStorage.setItem('loggedInUser', JSON.stringify({\n      username\n    }));\n    this.checkUserLoggedIn();\n  }\n\n  checkUserLoggedIn = () => {\n    const loggedInUser = JSON.parse(localStorage.getItem('loggedInUser'));\n    loggedInUser && this.props.history.push('/my-pentry');\n  }\n\n  handleSignup = () => {\n    this.props.history.push('/')\n  }\n  \n  render() {\n    return (\n      <>\n        <Login handleLogin={this.handleLogin} />\n        - or -\n        <Signup handleLogin={this.handleLogin} />\n      </>\n    )\n  }\n}\n\nexport default LoginPage;","import React, { Component } from 'react';\n\nconst initState = {\n  brand: '',\n  inkName: '',\n  colorName: '',\n  type: '',\n  size: '',\n  hue: '',\n  props: ''\n};\n\nclass AddInk extends Component {\n  state = initState\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.setState(initState);\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"inkName\"\n            placeholder=\"Ink Name\"\n            onChange={this.handleInputChange}\n            value={this.state.inkName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"colorName\"\n            placeholder=\"Color Name\"\n            onChange={this.handleInputChange}\n            value={this.state.colorName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"type\"\n            placeholder=\"Type\"\n            onChange={this.handleInputChange}\n            value={this.state.type} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"size\"\n            placeholder=\"Size\"\n            onChange={this.handleInputChange}\n            value={this.state.size} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"hue\"\n            placeholder=\"Hue\"\n            onChange={this.handleInputChange}\n            value={this.state.hue} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"props\"\n            placeholder=\"Properties\"\n            onChange={this.handleInputChange}\n            value={this.state.props} />  \n        </div>\n        <button onClick={this.handleSubmit}>Add</button>\n      </form>\n    )\n  }\n}\n\nexport default AddInk;","import React, { Component } from 'react';\nimport AddInk from '../AddInk';\n\nclass Inks extends Component {\n  render() {\n    return (\n      <>\n        <h2>My Inks</h2>\n        <ul>\n          <li>\n            <AddInk handleSubmit={this.props.handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Ink Name</div>\n            <div>Color Name</div>\n            <div>Type</div>\n            <div>Size</div>\n            <div>Hue</div>\n            <div>Properties</div>\n          </li>\n          {this.props.inks.map(ink => {\n            return (\n              <li key={ink.id}>\n                <div>{ink.brand}</div>\n                <div>{ink.inkName}</div>\n                <div>{ink.colorName}</div>\n                <div>{ink.type}</div>\n                <div>{ink.size}</div>\n                <div>{ink.hue}</div>\n                <div>{ink.props}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    )\n  }\n}\n\nexport default Inks;","import React, { Component } from 'react';\n\nconst initState = {\n  brand: '',\n  model: '',\n  finishName: '',\n  nibType: '',\n  nibSize: ''\n};\n\nclass AddPen extends Component {\n  state = initState\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state);\n    this.setState(initState);\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <input\n            type=\"text\"\n            name=\"brand\"\n            placeholder=\"Brand\"\n            onChange={this.handleInputChange}\n            value={this.state.brand} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"model\"\n            placeholder=\"Model Name\"\n            onChange={this.handleInputChange}\n            value={this.state.model} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"finishName\"\n            placeholder=\"Finish Name\"\n            onChange={this.handleInputChange}\n            value={this.state.finishName} />\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibType\"\n            placeholder=\"Nib Type\"\n            onChange={this.handleInputChange}\n            value={this.state.nibType} />  \n        </div>\n        <div>\n          <input\n            type=\"text\"\n            name=\"nibSize\"\n            placeholder=\"Nib Size\"\n            onChange={this.handleInputChange}\n            value={this.state.nibSize} />\n        </div>\n        <button onClick={this.handleSubmit}>Add</button>\n      </form>\n    )\n  }\n}\n\nexport default AddPen;","import React, { Component } from 'react';\nimport AddPen from '../AddPen';\n\nclass Pens extends Component {\n  checkPenInked = pen => {\n    const inkedHistory = this.props.inkedPens.filter(inkedPen => {\n      return inkedPen.penId === pen.id;\n    });\n\n    if (!inkedHistory.length) return false;\n    \n    if (inkedHistory.length && !inkedHistory[inkedHistory.length - 1].isActive)\n      return false;\n    \n    return inkedHistory[inkedHistory.length - 1];\n  }\n\n  render() {\n    return (\n      <>\n        <h2>My Pens</h2>\n        <ul>\n          <li>\n            <AddPen handleSubmit={this.props.handleSubmit} />\n          </li>\n          <li>\n            <div>Brand</div>\n            <div>Model</div>\n            <div>Finish Name</div>\n            <div>Nib Type</div>\n            <div>Nib Size</div>\n          </li>\n          {this.props.pens.map(pen => {\n            const penInked = this.checkPenInked(pen);\n\n            return (\n              <li key={pen.id}>\n                <div>{pen.brand}</div>\n                <div>{pen.model}</div>\n                <div>{pen.finishName}</div>\n                <div>{pen.nibType}</div>\n                <div>{pen.nibSize}</div>\n                {!penInked &&\n                  <button onClick={() => this.props.handlePenInking(pen)}>\n                    Ink This Pen\n                  </button>}\n                {penInked &&\n                  <button onClick={() => this.props.handlePenCleaning(penInked)}>\n                    Clean This Pen\n                  </button>}\n              </li>\n            );\n          })}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default Pens;","import React, { Component } from 'react';\n\nclass InkPen extends Component {\n  state = {\n    inkChoice: ''\n  }\n\n  handleInkChange = e => {\n    this.setState({\n      inkChoice: e.target.value\n    });\n  }\n\n  render() {\n    const { brand, model } = this.props.pen;\n\n    return (\n      <>\n        <p>{brand} {model}</p>\n        <select onChange={this.handleInkChange} value={this.state.inkChoice}>\n          <option value=\"\"></option>\n          {this.props.inks.map(ink => {\n            return (\n              <option key={ink.id} value={ink.id}>\n                {ink.brand} {ink.inkName} {ink.colorName}\n              </option>\n            );\n          })}\n        </select>\n        <button\n          onClick={() => this.props.handleInkChoice(this.props.pen.id, this.state.inkChoice)}>\n          Use This Ink\n        </button>\n      </>\n    );\n  }\n}\n\nexport default InkPen;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { nanoid } from 'nanoid'\nimport Inks from '../../components/Inks';\nimport Pens from '../../components/Pens';\nimport InkPen from '../../components/InkPen';\nimport { PANTRY_API } from '../../App';\n\nclass MyPentryPage extends Component {\n  state = {\n    user: JSON.parse(localStorage.getItem('loggedInUser')),\n    inks: [],\n    pens: [],\n    inkedPens: [],\n    inkPen: null\n  }\n\n  componentDidMount() {\n    this.state.user\n      ? this.refreshData()\n      : this.props.history.push('/');\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem('loggedInUser');\n    this.props.history.push('/');\n  }\n\n  handleInkSubmit = inkData => {\n    this.updateData({\n      inks: [\n        {\n          id: nanoid(),\n          dateAdded: Date.now(),\n          ...inkData\n        }\n      ]\n    });\n  }\n\n  handlePenSubmit = penData => {\n    this.updateData({\n      pens: [\n        {\n          id: nanoid(),\n          dateAdded: Date.now(),\n          ...penData\n        }\n      ]\n    })\n  }\n\n  handlePenInking = pen => {\n    this.setState({\n      inkPen: pen\n    });\n  }\n\n  handleInkChoice = (penId, inkId) => {\n    this.updateData({\n      inkedPens: [\n        {\n          id: nanoid(),\n          dateInked: Date.now(),\n          penId,\n          inkId,\n          isActive: true\n        }\n      ]\n    });\n    this.setState({\n      inkPen: null\n    });\n  }\n\n  handlePenCleaning = pen => {\n    this.updateData({\n      inkedPens: [\n        {\n          ...pen,\n          isActive: false,\n          dateCleaned: Date.now()\n        }\n      ]\n    });\n  }\n\n  updateData = newData => {\n    axios({\n      url: `${PANTRY_API}/basket/${this.state.user.username}`,\n      method: 'PUT',\n      data: newData\n    }).then(() => this.refreshData());\n  }\n\n  refreshData = () => {\n    axios\n      .get(`${PANTRY_API}/basket/${this.state.user.username}`)\n      .then(res => this.setState({\n        inks: res.data.inks,\n        pens: res.data.pens,\n        inkedPens: res.data.inkedPens\n      }));\n  }\n\n  render() {\n    const { path } = this.props.match;\n\n    if (!this.state.user) return null;\n\n    return (\n      <>\n        <p>\n          Welcome,&nbsp;\n          <strong>{this.state.user.username}</strong>&nbsp;\n          (<Link to=\"/\" onClick={this.handleLogout}>logout</Link>)\n        </p>\n        <Link to={`${path}`}>\n          <h1>Pentry</h1>\n        </Link>\n        <ul>\n          <li>\n            <Link to={`${path}/inks`}>Inks</Link>\n          </li>\n          <li>\n            <Link to={`${path}/pens`}>Pens</Link>\n          </li>\n        </ul>\n        <Switch>\n          <Route path={`${path}/inks`} render={routerProps => {\n            return (\n              <Inks\n                inks={this.state.inks}\n                handleSubmit={this.handleInkSubmit}\n                {...routerProps} />\n            )\n          }} />\n          <Route path={`${path}/pens`} render={routerProps => {\n            return (\n              <Pens\n                pens={this.state.pens}\n                inkedPens={this.state.inkedPens}\n                handleSubmit={this.handlePenSubmit}\n                handlePenInking={this.handlePenInking}\n                handlePenCleaning={this.handlePenCleaning}\n                {...routerProps} />\n            )\n          }} />\n        </Switch>\n        {this.state.inkPen &&\n          <InkPen\n            pen={this.state.inkPen}\n            inks={this.state.inks}\n            handleInkChoice={this.handleInkChoice} />}\n      </>\n    )\n  }\n}\n\nexport default MyPentryPage;","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport LoginPage from './pages/LoginPage';\nimport MyPentryPage from './pages/MyPentryPage';\n\nexport const PANTRY_API = process.env.REACT_APP_PANTRY_API;\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route path=\"/\" exact component={LoginPage} />\n          <Route path=\"/my-pentry\" component={MyPentryPage} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}